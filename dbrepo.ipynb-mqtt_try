{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1dcb562c-e889-48af-b347-eea823c48588",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting paho-mqtt\n",
      "  Downloading paho_mqtt-2.1.0-py3-none-any.whl.metadata (23 kB)\n",
      "Downloading paho_mqtt-2.1.0-py3-none-any.whl (67 kB)\n",
      "Installing collected packages: paho-mqtt\n",
      "Successfully installed paho-mqtt-2.1.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 24.3.1 -> 25.0.1\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "!pip install paho-mqtt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2dc82916-3e5f-4f9a-8dfd-efaf9f9567f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import paho.mqtt.client as mqtt\n",
    "\n",
    "MQTT_BROKER = \"localhost\"  # Broker address\n",
    "MQTT_PORT = 1883  # Broker port\n",
    "MQTT_TOPIC = \"dbrepo.204a70a0-3dc2-4b8a-b36f-7c266d6d750e.183c11ba-3e3b-4d39-835d-f33d03393802\"  # Topic to subscribe to\n",
    "\n",
    "# MQTT Authentication details (if required)\n",
    "MQTT_USERNAME = \"reema\"  # Replace with your MQTT username\n",
    "MQTT_PASSWORD = \"Toothless!26\"  # Replace with your MQTT password\n",
    "\n",
    "def on_connect(client, userdata, flags, rc):\n",
    "    print(f\"Connected with result code {rc}\")\n",
    "    if rc == 0:\n",
    "        client.subscribe(MQTT_TOPIC)\n",
    "    else:\n",
    "        print(f\"Connection failed with result code {rc}\")\n",
    "\n",
    "def on_message(client, userdata, msg):\n",
    "    print(f\"Received message: {msg.payload.decode()}\")\n",
    "\n",
    "client = mqtt.Client()\n",
    "\n",
    "# Set the username and password for the connection\n",
    "client.username_pw_set(MQTT_USERNAME, MQTT_PASSWORD)\n",
    "\n",
    "# Assign the callback functions\n",
    "client.on_connect = on_connect\n",
    "client.on_message = on_message\n",
    "\n",
    "client.connect(MQTT_BROKER, MQTT_PORT, 60)\n",
    "\n",
    "client.loop_forever()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b0e65b53-22aa-4e0e-9c18-8c7acca3e05b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
